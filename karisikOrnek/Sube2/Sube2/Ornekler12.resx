<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGiris.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>